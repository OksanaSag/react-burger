{"ast":null,"code":"var _jsxFileName = \"/Users/sagitovaoksana/Documents/react-burger/src/components/burgerIngredients/BurgerIngredients.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\n\n// import { Ingredients } from \"./Ingredients\";\n// import { ingredientTypes } from \"../../utils/types\";\nimport { clsx } from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ingredientTypes = {\n  _id: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  proteings: PropTypes.number,\n  fat: PropTypes.number,\n  carbohydrates: PropTypes.number,\n  calories: PropTypes.number,\n  price: PropTypes.number,\n  image: PropTypes.string,\n  image_mobile: PropTypes.string,\n  image_large: PropTypes.string,\n  __v: PropTypes.number\n};\nconst ListItem = _ref => {\n  let {\n    type,\n    data\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-large mb-6\",\n      children: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex wor wrap mb-10\",\n      children: data.map((el, index) => /*#__PURE__*/_createElement(Card, {\n        className: \"ml-4\",\n        ...el,\n        key: el._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 43\n        }\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = ListItem;\nexport const listItemPropTypes = {\n  type: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape(cardPropTypes)).isRequired\n};\nListItem.propTypes = listItemPropTypes;\nconst Ingredients = _ref2 => {\n  let {\n    data,\n    height\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(style.list_container, 'flex column'),\n    style: {\n      height: height\n    },\n    children: data.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n      type: item.type,\n      data: item.data\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 41\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Ingredients;\nexport const listPropTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape(listItemPropTypes)).isRequired,\n  height: PropTypes.number.isRequired\n};\nIngredients.propTypes = listPropTypes;\nexport const AppMain = _ref3 => {\n  let {\n    data\n  } = _ref3;\n  const bun = data.find(el => el.type === 'bun');\n  const ingredients = data.filter(el => el.type !== 'bun');\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: clsx('flex row justify_content-center gap-10'),\n    children: /*#__PURE__*/_jsxDEV(BurgerIngredients, {\n      data: data,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_c3 = AppMain;\nexport const appMainPropTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape(ingredientTypes)).isRequired\n};\nAppMain.propTypes = appMainPropTypes;\nfunction BurgerIngredients(_ref4) {\n  _s();\n  let {\n    data,\n    height,\n    className\n  } = _ref4;\n  const tabs = [{\n    text: 'Булки',\n    value: 'bun'\n  }, {\n    text: 'Соусы',\n    value: 'sauce'\n  }, {\n    text: 'Начинки',\n    value: 'main'\n  }];\n  const [activeTab, setActiveTab] = useState(tabs[0].value);\n  const list = Object.entries(data.reduce((acc, value) => ({\n    ...acc,\n    [value.type]: Array.isArray(acc[value.type]) ? [].concat(acc[value.type], value) : [value]\n  }), {})).map(_ref5 => {\n    let [key, value] = _ref5;\n    return {\n      type: tabs.find(el => el.value === key).text,\n      data: value\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: clsx(className),\n    style: {\n      width: 600\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text text_type_main-large mt-10 mb-5\",\n      children: \"\\u0421\\u043E\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0431\\u0443\\u0440\\u0433\\u0435\\u0440\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tab, {\n      value: activeTab,\n      tabs: tabs,\n      onClick: setActiveTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Ingredients, {\n      data: list,\n      height: height\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(BurgerIngredients, \"ueANEXtRzJ80uF3Nlax4k8V+te0=\");\n_c4 = BurgerIngredients;\nexport const burgerIngredientsPropTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape(ingredientTypes)).isRequired,\n  height: PropTypes.number.isRequired\n};\nBurgerIngredients.propTypes = burgerIngredientsPropTypes;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ListItem\");\n$RefreshReg$(_c2, \"Ingredients\");\n$RefreshReg$(_c3, \"AppMain\");\n$RefreshReg$(_c4, \"BurgerIngredients\");","map":{"version":3,"names":["PropTypes","useState","Tab","clsx","ingredientTypes","_id","string","name","type","proteings","number","fat","carbohydrates","calories","price","image","image_mobile","image_large","__v","ListItem","data","map","el","index","listItemPropTypes","isRequired","arrayOf","shape","cardPropTypes","propTypes","Ingredients","height","style","list_container","item","listPropTypes","AppMain","bun","find","ingredients","filter","appMainPropTypes","BurgerIngredients","className","tabs","text","value","activeTab","setActiveTab","list","Object","entries","reduce","acc","Array","isArray","concat","key","width","burgerIngredientsPropTypes"],"sources":["/Users/sagitovaoksana/Documents/react-burger/src/components/burgerIngredients/BurgerIngredients.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\n\n// import { Ingredients } from \"./Ingredients\";\n// import { ingredientTypes } from \"../../utils/types\";\nimport { clsx } from \"clsx\";\n\nconst ingredientTypes = {\n    _id: PropTypes.string,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    proteings: PropTypes.number,\n    fat: PropTypes.number,\n    carbohydrates: PropTypes.number,\n    calories: PropTypes.number,\n    price: PropTypes.number,\n    image: PropTypes.string,\n    image_mobile: PropTypes.string,\n    image_large: PropTypes.string,\n    __v: PropTypes.number\n}\nconst ListItem = ({ type, data }) => {\n    return (\n        <>\n            <p className=\"text text_type_main-large mb-6\">{type}</p>\n            <div className='flex wor wrap mb-10'>\n                {data.map((el, index) => (<Card className=\"ml-4\" {...el} key={el._id} />))}\n            </div>\n        </>\n    )\n}\n\nexport const listItemPropTypes = {\n    type: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.shape(cardPropTypes)).isRequired\n}\n\nListItem.propTypes = listItemPropTypes\nconst Ingredients = ({ data, height }) => {\n    return (\n        <div className={clsx(style.list_container, 'flex column')} style={{ height: height }}>\n            {data.map((item, index) => (<ListItem type={item.type} data={item.data} key={index} />))}\n        </div >\n    )\n}\n\nexport const listPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape(listItemPropTypes)\n    ).isRequired,\n    height: PropTypes.number.isRequired\n}\n\nIngredients.propTypes = listPropTypes\nexport const AppMain = ({ data }) => {\n    const bun = data.find(el => el.type === 'bun')\n    const ingredients = data.filter(el => el.type !== 'bun')\n\n    return (\n        <main className={clsx('flex row justify_content-center gap-10')}>\n            <BurgerIngredients data={data} height={500} />\n            {/* <BurgerConstructor bun={bun} ingredients={ingredients} /> */}\n        </main>\n    )\n}\n\nexport const appMainPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape(ingredientTypes)\n    ).isRequired,\n}\n\nAppMain.propTypes = appMainPropTypes\n function BurgerIngredients  ({ data, height, className })  {\n    const tabs = [\n        {\n            text: 'Булки',\n            value: 'bun'\n        },\n        {\n            text: 'Соусы',\n            value: 'sauce'\n        },\n        {\n            text: 'Начинки',\n            value: 'main'\n        },\n    ]\n    const [activeTab, setActiveTab] = useState(tabs[0].value)\n    const list = Object.entries(\n        data.reduce((acc, value) => ({\n            ...acc,\n            [value.type]: Array.isArray(acc[value.type]) ? [].concat(acc[value.type], value) : [value]\n\n        }), {})\n    ).map(([key, value]) => ({\n        type: tabs.find(el => el.value === key).text,\n        data: value\n    }))\n\n    return (\n        <div className={clsx(className)} style={{ width: 600 }}>\n            <p className=\"text text_type_main-large mt-10 mb-5\">Соберите бургер</p>\n            <Tab value={activeTab} tabs={tabs} onClick={setActiveTab} />\n            <Ingredients data={list} height={height} />\n        </div>\n    )\n}\n\nexport const burgerIngredientsPropTypes = {\n    data: PropTypes.arrayOf(\n        PropTypes.shape(ingredientTypes)\n    ).isRequired,\n    height: PropTypes.number.isRequired\n}\n\nBurgerIngredients.propTypes = burgerIngredientsPropTypes\n     "],"mappings":"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"},"metadata":{},"sourceType":"module"}